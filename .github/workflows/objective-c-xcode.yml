name: Bump Version and Commit

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.4'  # Replace with your desired Flutter version

    - name: Bump Version
      run: |
        if [ $GITHUB_REF = "refs/heads/dev" ]; then
          flutter pub get
          current_version=$(awk '/^version:/ {print $2}' pubspec.yaml)
          version_segments=($(echo $current_version | tr '.' ' '))
          major=${version_segments[0]}
          minor=${version_segments[1]}
          patch=${version_segments[2]}

          # Determine version increment type from commit messages
          commit_message=$(git log -1 --pretty=%B)
          if echo "$commit_message" | grep -qi "major"; then
            new_version="$((major + 1)).0.0"
          elif echo "$commit_message" | grep -qi "minor"; then
            new_version="$major.$((minor + 1)).0"
          elif echo "$commit_message" | grep -qi "patch"; then
            new_version="$major.$minor.$((patch + 1))"
          else
            # No specific keyword found, No version bump
            new_version="$major.$minor.$patch)"
          fi

          sed -i'' -e "s/^version: .*/version: $new_version/" pubspec.yaml
        fi

      working-directory: ./

    - name: Create Versions Directory and Files
      run: |
        if [ ! -d "versions" ]; then
          mkdir versions
        fi

        current_date=$(date +"%Y-%m-%d %H:%M:%S")
        updated_version=$(awk '/^version:/ {print $2}' pubspec.yaml)

        echo "version is $updated_version "

        if [ $GITHUB_REF = "refs/heads/dev" ]; then
          echo "Last updated: $current_date ,Latest version: $updated_version " > versions/dev.txt
        elif [ $GITHUB_REF = "refs/heads/qa" ]; then
         echo "Last updated: $current_date ,Latest version: $updated_version "  > versions/uat.txt
        elif [ $GITHUB_REF = "refs/heads/main" ]; then
          echo "Date: $current_date ,Version: $updated_version" >> versions/prod.txt
        fi

    - name: Commit Version Bump and File Updates
      run: |
        branch_name=$(echo "$GITHUB_REF" | cut -d'/' -f3)
        git checkout $branch_name
        git config --local user.email "cvaruncv1998@gmail.com"
        git config --local user.name "cv-arun"
        git add pubspec.yaml versions/
        git commit -m "Bump version to $new_version and update version files"
        git push -u origin $branch_name
